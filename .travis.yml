language: rust

rust:
  - stable
  - beta

env:
  - WORKER_LIBRARY_FILE=$TRAVIS_BUILD_DIR/libworker.so

jobs:
  include:
    # Test Python SDK on nighlty
    - rust: nightly
      script:
        - cargo test --all-features --package py_mcai_worker_sdk
      env:
        - TEST_PYTHON_SDK=TRUE
        - WORKER_LIBRARY_FILE=$TRAVIS_BUILD_DIR/libworker.so

    # Rustfmt
    - rust: stable
      install:
        - rustup component add rustfmt-preview
      before_script:
        - cargo fmt --version
      script:
        - cargo fmt -- --check
      env:
        - CHECK_FORMAT=TRUE
        - WORKER_LIBRARY_FILE=$TRAVIS_BUILD_DIR/libworker.so

    # Clippy
    - rust: stable
      install:
        - rustup component add clippy-preview
      script:
        # Fail if clippy output contains "error:" or "warning:"
        - cd $TRAVIS_BUILD_DIR/rs_mcai_worker_sdk && cargo clippy --features media 2>&1 | tee ./clippy.out && ! grep -qe  "error:\|warning:" ./clippy.out
        - cd $TRAVIS_BUILD_DIR/c_mcai_worker_sdk && cargo clippy --features media 2>&1 | tee ./clippy.out && ! grep -qe  "error:\|warning:" ./clippy.out
      env:
        - CHECK_SYNTAX=TRUE
        - WORKER_LIBRARY_FILE=$TRAVIS_BUILD_DIR/libworker.so

    # Clippy Python SDK
    # - rust: nightly
    #   install:
    #     - rustup component add clippy-preview
    #   script:
    #     # Fail if clippy output contains "error:" or "warning:"
    #     - cargo clippy --package py_mcai_worker_sdk 2>&1 | tee ./clippy.out && ! grep -qe  "error:\|warning:" ./clippy.out
    #   env:
    #     - CHECK_SYNTAX_PY_SDK=TRUE
    #     - WORKER_LIBRARY_FILE=$TRAVIS_BUILD_DIR/libworker.so

    # Test coverage
    - rust: nightly
      install:
        - RUSTFLAGS="--cfg procmacro2_semver_exempt" cargo install cargo-tarpaulin --force
      script:
        - gcc -c -Wall -Werror -fpic c_mcai_worker_sdk/worker.cpp && gcc -shared -o libworker.so worker.o
        - travis_wait cargo tarpaulin --verbose --all-features --ciserver travis-ci --coveralls $TRAVIS_JOB_ID -- --test-threads 1
      env:
        - COVERAGE_CHECK=TRUE
        - TRAVIS_RUST_VERSION=nightly-2020-01-21
        - WORKER_LIBRARY_FILE=$TRAVIS_BUILD_DIR/libworker.so

    - rust: nightly
      script:
        - gcc -c -Wall -Werror -fpic c_mcai_worker_sdk/worker.cpp && gcc -shared -o libworker.so worker.o
        - cargo test
      env:
        - ALLOW_FAILURE=TRUE
        - WORKER_LIBRARY_FILE=$TRAVIS_BUILD_DIR/libworker.so

  allow_failures:
    - env:
      - ALLOW_FAILURE=TRUE
      - WORKER_LIBRARY_FILE=$TRAVIS_BUILD_DIR/libworker.so

  allow_failures:
    - env:
      - ALLOW_FAILURE=TRUE
      - COVERAGE_CHECK=TRUE
      - TRAVIS_RUST_VERSION=nightly-2020-01-21
      - WORKER_LIBRARY_FILE=$TRAVIS_BUILD_DIR/libworker.so

script:
  - gcc -c -Wall -Werror -fpic c_mcai_worker_sdk/worker.cpp && gcc -shared -o libworker.so worker.o
  - cd $TRAVIS_BUILD_DIR/rs_mcai_worker_sdk && cargo test --features=media
  - cd $TRAVIS_BUILD_DIR/c_mcai_worker_sdk && cargo test --features=media

before_script:
  - sudo add-apt-repository ppa:jonathonf/ffmpeg-4 -y
  - sudo add-apt-repository ppa:deadsnakes/ppa -y
  - sudo apt-get update -q
  - sudo apt-get install ffmpeg libavcodec-dev libavformat-dev libavutil-dev libavdevice-dev libavfilter-dev libavresample-dev libpostproc-dev libswscale-dev python3.7 -y
  - sudo ln -sf python3.7 /usr/bin/python3
  - sudo ln -sf python3.7m /usr/bin/python3m

# Need to cache the whole `.cargo` directory to keep .crates.toml for
# cargo-update to work
cache:
  directories:
    - /home/travis/.cargo

# But don't cache the cargo registry
before_cache:
  - rm -rf /home/travis/.cargo/registry

addons:
  apt:
    packages:
      - libssl-dev  # Required for tarpaulin
      - gcc
